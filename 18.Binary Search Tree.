#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>

struct node
{
	int info;
	struct node *llink;
	struct node *rlink;
};
typedef struct node *NODE;

NODE getnode()
{
	NODE x;
	x=(NODE)malloc(sizeof(struct node));
	if(x==NULL)
	{
		printf("Out of memory");
		exit(0);
	}
	return x;
}

NODE insert(int item,NODE root)
{
	NODE temp;
	temp=getnode();
	temp->info=item;
	temp->llink=temp->rlink=NULL;
	if(root==NULL)return temp;	
	NODE prev,cur;
	prev=NULL;
	cur=root;
	while(cur!=NULL)
	{
		prev=cur;

		if(cur->info>item)
			cur=cur->llink;
		else
			cur=cur->rlink;
	
	}
	
	if(prev->info>item)
	
		prev->llink=temp;
	else
		prev->rlink=temp;	
	return root;
}


void display(NODE root,int level)
{
    int i;
    if(root==NULL) return;
    display(root->rlink,level+1);
    for(i=0;i<level;i++) printf("  ");
    printf("%d\n",root->info);
    display(root->llink,level+1);
}
	
void main()
{NODE root=NULL;
	int choice,item;
	for(;;)
	{	
	printf("\n1.Insert \t2. Display\n");
	scanf("%d",&choice);
	
	switch(choice)
	{
		case 1:
		printf("enter item to insert: \n");
		scanf("%d",&item);
		root=insert(item,root);
		break;
		
		case 2:
		display(root,1);
		break;
		

		default:
		exit(0);
	}
}
}






